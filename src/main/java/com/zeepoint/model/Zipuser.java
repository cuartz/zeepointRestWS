package com.zeepoint.model;
// Generated Jun 29, 2015 2:10:42 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Zipuser generated by hbm2java
 */
@Entity
@Table(name="zipuser"
    ,catalog="zipoints"
    , uniqueConstraints = @UniqueConstraint(columnNames="fb_id") 
)
public class Zipuser  implements java.io.Serializable {


     private Long id;
     private long fbId;
     private String name;
     private Integer age;
     private String email;
     private String gender;
     private String imageurl;
     private String deviceId;
     private int notifications;
     private Set<Proom> proomsForUserId = new HashSet<Proom>(0);
     private Set<Pmessage> pmessagesForFromUserId = new HashSet<Pmessage>(0);
     private Set<Proom> proomsForUser2id = new HashSet<Proom>(0);
     private Set<Room> rooms = new HashSet<Room>(0);
     private Set<Contact> contactsForUser = new HashSet<Contact>(0);
     private Set<Contact> contactsForContactId = new HashSet<Contact>(0);
     private Set<Pmessage> pmessagesForToUserId = new HashSet<Pmessage>(0);
     private Set<Message> messages = new HashSet<Message>(0);
     private Set<UserRoles> userRoleses = new HashSet<UserRoles>(0);
     private Set<Zeepoint> zeepoints = new HashSet<Zeepoint>(0);

    public Zipuser() {
    }

	
    public Zipuser(long fbId, int notifications) {
        this.fbId = fbId;
        this.notifications = notifications;
    }
    public Zipuser(long fbId, String name, Integer age, String email, String gender, String imageurl, String deviceId, int notifications, Set<Proom> proomsForUserId, Set<Pmessage> pmessagesForFromUserId, Set<Proom> proomsForUser2id, Set<Room> rooms, Set<Contact> contactsForUser, Set<Contact> contactsForContactId, Set<Pmessage> pmessagesForToUserId, Set<Message> messages, Set<UserRoles> userRoleses, Set<Zeepoint> zeepoints) {
       this.fbId = fbId;
       this.name = name;
       this.age = age;
       this.email = email;
       this.gender = gender;
       this.imageurl = imageurl;
       this.deviceId = deviceId;
       this.notifications = notifications;
       this.proomsForUserId = proomsForUserId;
       this.pmessagesForFromUserId = pmessagesForFromUserId;
       this.proomsForUser2id = proomsForUser2id;
       this.rooms = rooms;
       this.contactsForUser = contactsForUser;
       this.contactsForContactId = contactsForContactId;
       this.pmessagesForToUserId = pmessagesForToUserId;
       this.messages = messages;
       this.userRoleses = userRoleses;
       this.zeepoints = zeepoints;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    
    @Column(name="fb_id", unique=true, nullable=false)
    public long getFbId() {
        return this.fbId;
    }
    
    public void setFbId(long fbId) {
        this.fbId = fbId;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="age")
    public Integer getAge() {
        return this.age;
    }
    
    public void setAge(Integer age) {
        this.age = age;
    }

    
    @Column(name="email", length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="gender", length=20)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    
    @Column(name="imageurl", length=80)
    public String getImageurl() {
        return this.imageurl;
    }
    
    public void setImageurl(String imageurl) {
        this.imageurl = imageurl;
    }

    
    @Column(name="device_id", length=80)
    public String getDeviceId() {
        return this.deviceId;
    }
    
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    
    @Column(name="notifications", nullable=false)
    public int getNotifications() {
        return this.notifications;
    }
    
    public void setNotifications(int notifications) {
        this.notifications = notifications;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuserByUserId")
    public Set<Proom> getProomsForUserId() {
        return this.proomsForUserId;
    }
    
    public void setProomsForUserId(Set<Proom> proomsForUserId) {
        this.proomsForUserId = proomsForUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuserByFromUserId")
    public Set<Pmessage> getPmessagesForFromUserId() {
        return this.pmessagesForFromUserId;
    }
    
    public void setPmessagesForFromUserId(Set<Pmessage> pmessagesForFromUserId) {
        this.pmessagesForFromUserId = pmessagesForFromUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuserByUser2id")
    public Set<Proom> getProomsForUser2id() {
        return this.proomsForUser2id;
    }
    
    public void setProomsForUser2id(Set<Proom> proomsForUser2id) {
        this.proomsForUser2id = proomsForUser2id;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuser")
    public Set<Room> getRooms() {
        return this.rooms;
    }
    
    public void setRooms(Set<Room> rooms) {
        this.rooms = rooms;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuserByUser")
    public Set<Contact> getContactsForUser() {
        return this.contactsForUser;
    }
    
    public void setContactsForUser(Set<Contact> contactsForUser) {
        this.contactsForUser = contactsForUser;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuserByContactId")
    public Set<Contact> getContactsForContactId() {
        return this.contactsForContactId;
    }
    
    public void setContactsForContactId(Set<Contact> contactsForContactId) {
        this.contactsForContactId = contactsForContactId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuserByToUserId")
    public Set<Pmessage> getPmessagesForToUserId() {
        return this.pmessagesForToUserId;
    }
    
    public void setPmessagesForToUserId(Set<Pmessage> pmessagesForToUserId) {
        this.pmessagesForToUserId = pmessagesForToUserId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuser")
    public Set<Message> getMessages() {
        return this.messages;
    }
    
    public void setMessages(Set<Message> messages) {
        this.messages = messages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuser")
    public Set<UserRoles> getUserRoleses() {
        return this.userRoleses;
    }
    
    public void setUserRoleses(Set<UserRoles> userRoleses) {
        this.userRoleses = userRoleses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="zipuser")
    public Set<Zeepoint> getZeepoints() {
        return this.zeepoints;
    }
    
    public void setZeepoints(Set<Zeepoint> zeepoints) {
        this.zeepoints = zeepoints;
    }




}


